# #
#   @type               github workflow
#   @author             Aetherinox
#   @url                https://github.com/Aetherinox
#   @usage              creates repository labels if they are not yet installed
#                           issues marked as stale after 30 days, given tag Status ‚Ä∫ Stale
#                           inactive issues closed after 180 days, given tag Status ‚Ä∫ Locked
#                           inactive pr closed after 365 days, given tag Status ‚Ä∫ Locked
#                           issues marked stale after 30 days, given tag Status ‚Ä∫ Stale
#                           issues marked closed 7 days after being marked stale, given tag Status ‚Ä∫ Autoclosed
#
#   @notes              This Github action must be activated manually.  This workflow script will do the following:
#                           - Scan issues / pull requests and make sure they have properly assigned labels:
#                               - `Bug`
#                               - `Feature`
#                               - `Urgent`
#                               - `Roadmap`
#
#                           - Workflow script will then scan each pr or issue and mark them as `Stale`
#                               if they haven't had any replies in 30 days.
#
#                           - Workflow will `autoclose` pr or issues which haven't had action in `365 days`.
#
#   @secrets            secrets.SELF_TOKEN                                          self github personal access token (fine-grained)
#                       secrets.SELF_TOKEN_CL                                       self github personal access token (classic)
#                       secrets.NPM_TOKEN                                           self npmjs access token
#                       secrets.PYPI_API_TOKEN                                      self Pypi API token (production site) - https://pypi.org/
#                       secrets.PYPI_API_TEST_TOKEN                                 self Pypi API token (test site) - https://test.pypi.org/
#                       secrets.SELF_DOCKERHUB_TOKEN                                self Dockerhub token
#                       secrets.CODECOV_TOKEN                                       codecov upload token for nodejs projects
#                       secrets.MAXMIND_GELITE_TOKEN                                maxmind API token
#                       secrets.CF_ACCOUNT_ID                                       cloudflare account id
#                       secrets.CF_ACCOUNT_TOKEN                                    cloudflare account token
#                       secrets.ORG_TOKEN                                           org github personal access token (fine-grained)
#                       secrets.ORG_TOKEN_CL                                        org github personal access token (classic)
#                       secrets.ORG_DOCKERHUB_TOKEN                                 org dockerhub secret
#                       secrets.ORG_GITEA_TOKEN                                     org gitea personal access token (classic) with package:write permission
#                       secrets.BOT_GPG_KEY_ASC                                     bot gpg private key (armored) | BEGIN PGP PRIVATE KEY BLOCK
#                       secrets.BOT_GPG_KEY_B64                                     bot gpg private key (binary) converted to base64
#                       secrets.BOT_GPG_PASSPHRASE                                  bot gpg private key passphrase
#                       secrets.DISCORD_WEBHOOK_CHAN_GITHUB_RELEASES                discord webhook to report release notifications from github to discord
#                       secrets.DISCORD_WEBHOOK_CHAN_GITHUB_WORKFLOWS               discord webhook to report workflow notifications from github to discord
#                       secrets.DISCORD_WEBHOOK_CHAN_GITHUB_UPDATES                 discord webhook to report activity notifications from github to discord
#
#   @local              these workflows can be tested locally through the use of `act`
#                           https://github.com/nektos/act
#                       Extract act to folder
#                       Add system env var with path to act.exe
#                       Run the commands:
#                           git pull https://github.com/username/repo
#                           act -W .github/workflows/issues-stale.yml -P ubuntu-latest=catthehacker/ubuntu:full-22.04
#                           act -W .github/workflows/issues-stale.yml -s TOKEN_CL=XXXXXXXXXX --pull=false
# #

name: 'üé´ Issues ‚Ä∫ Stale'
run-name: 'üé´ Issues ‚Ä∫ Stale'

# #
#   triggers
# #

on:
    workflow_dispatch:
  # schedule:
  #     - cron: "0 0 * * *"

# #
#   environment variables
# #

env:
    PREFIX_BUG:                 "üêõ Bug"
    PREFIX_DEPENDENCY:          "Dependency"
    PREFIX_DOCS:                "Docs"
    PREFIX_FEATURE:             "üí° Feature"
    PREFIX_GIT:                 "Git Action"
    PREFIX_PR:                  "PR"
    PREFIX_ROADMAP:             "üó∫Ô∏è Roadmap"
    PREFIX_INTERNAL:            "Internal"
    PREFIX_URGENT:              "‚ö† Urgent"

    LABEL_BUG:                  "Type ‚Ä∫ Bug"
    LABEL_DEPENDENCY:           "Type ‚Ä∫ Dependency"
    LABEL_DOCS:                 "Type ‚Ä∫ Docs"
    LABEL_FEATURE:              "Type ‚Ä∫ Feature"
    LABEL_GIT:                  "Type ‚Ä∫ Git Action"
    LABEL_PR:                   "Type ‚Ä∫ Pull Request"
    LABEL_ROADMAP:              "Type ‚Ä∫ Roadmap"
    LABEL_INTERNAL:             "Type ‚Ä∫ Internal"
    LABEL_LOCKED:               "Status ‚Ä∫ Locked"
    LABEL_STALE:                "Status ‚Ä∫ Stale"
    LABEL_AUTOCLOSE:            "Status ‚Ä∫ Autoclosed"
    LABEL_ACCEPTED:             "Status ‚Ä∫ Accepted"
    LABEL_REVIEW:               "Status ‚Ä∫ Review"
    LABEL_PENDING:              "Status ‚Ä∫ Pending"
    LABEL_AC_REVIEW:            "AC ‚Ä∫ Review Required"
    LABEL_URGENT:               "‚ö† Urgent"

    ASSIGN_USER:                Aetherinox
    BOT_NAME_1:                 EuropaServ
    BOT_NAME_2:                 BinaryServ
    BOT_NAME_DEPENDABOT:        dependabot[bot]
    BOT_NAME_RENOVATE:          renovate[bot]

    LABELS_JSON: |
      [
          { "name": "AC ‚Ä∫ Changes Made",            "color": "8F1784", "description": "Requested changes have been made and are pending a re-scan" },
          { "name": "AC ‚Ä∫ Changes Required",        "color": "8F1784", "description": "Requires changes to be made to the package before being accepted" },
          { "name": "AC ‚Ä∫ Failed",                  "color": "a61f2d", "description": "Autocheck failed to run through a complete cycle, requires investigation" },
          { "name": "AC ‚Ä∫ Needs Rebase",            "color": "8F1784", "description": "Due to the permissions on the requesting repo, this pull request must be rebased by the author" },
          { "name": "AC ‚Ä∫ Passed",                  "color": "146b4a", "description": "Ready to be reviewed" },
          { "name": "AC ‚Ä∫ Review Required",         "color": "8F1784", "description": "PR needs to be reviewed by another person, after the requested changes have been made" },
          { "name": "AC ‚Ä∫ Security Warning",        "color": "761620", "description": "Does not conform to developer policies, or includes potentially dangerous code" },
          { "name": "AC ‚Ä∫ Skipped Scan",            "color": "8F1784", "description": "Author has skipped code scan" },
          { "name": "Status ‚Ä∫ Duplicate",           "color": "75536b", "description": "Issue or pull request already exists" },
          { "name": "Status ‚Ä∫ Accepted",            "color": "2e7539", "description": "This pull request has been accepted" },
          { "name": "Status ‚Ä∫ Autoclosed",          "color": "3E0915", "description": "Originally stale and was autoclosed for no activity" },
          { "name": "Status ‚Ä∫ Denied",              "color": "ba4058", "description": "Pull request has been denied" },
          { "name": "Status ‚Ä∫ Locked",              "color": "550F45", "description": "Automatically locked by AdminServ for a prolonged period of inactivity" },
          { "name": "Status ‚Ä∫ Need Info",           "color": "2E3C4C", "description": "Not enough information to resolve" },
          { "name": "Status ‚Ä∫ No Action",           "color": "030406", "description": "Closed without any action being taken" },
          { "name": "Status ‚Ä∫ Pending",             "color": "984b12", "description": "Pending pull request" },
          { "name": "Status ‚Ä∫ Released",            "color": "1b6626", "description": "Issues or PR has been implemented and is now live" },
          { "name": "Status ‚Ä∫ Reopened",            "color": "8a6f14", "description": "A previously closed PR which has been re-opened" },
          { "name": "Status ‚Ä∫ Review",              "color": "9e1451", "description": "Currently pending review" },
          { "name": "Status ‚Ä∫ Stale",               "color": "928282", "description": "Has not had any activity in over 30 days" },
          { "name": "Type ‚Ä∫ Bug",                   "color": "9a2c2c", "description": "Something isn't working" },
          { "name": "Type ‚Ä∫ Dependency",            "color": "243759", "description": "Item is associated to dependency" },
          { "name": "Type ‚Ä∫ Lock Maintenance",      "color": "FBCA04", "description": "Sync package-lock.json" },
          { "name": "Type ‚Ä∫ Docs",                  "color": "0e588d", "description": "Improvements or modifications to docs" },
          { "name": "Type ‚Ä∫ Feature",               "color": "3c4e93", "description": "Feature request" },
          { "name": "Type ‚Ä∫ Git Action",            "color": "030406", "description": "GitHub Action / workflow" },
          { "name": "Type ‚Ä∫ Pull Request",          "color": "8F1784", "description": "Normal pull request" },
          { "name": "Type ‚Ä∫ Roadmap",               "color": "8F1784", "description": "Feature or bug currently planned for implementation" },
          { "name": "Type ‚Ä∫ Internal",              "color": "A51994", "description": "Assigned items are for internal developer use" },
          { "name": "Build ‚Ä∫ Desktop",              "color": "c7ca4a", "description": "Specific to desktop" },
          { "name": "Build ‚Ä∫ Linux",                "color": "c7ca4a", "description": "Specific to Linux" },
          { "name": "Build ‚Ä∫ MacOS",                "color": "c7ca4a", "description": "Specific to MacOS" },
          { "name": "Build ‚Ä∫ Mobile",               "color": "c7ca4a", "description": "Specific to mobile" },
          { "name": "Build ‚Ä∫ Web",                  "color": "c7ca4a", "description": "Specific to web" },
          { "name": "Build ‚Ä∫ Windows",              "color": "c7ca4a", "description": "Specific to Windows" },
          { "name": "‚Ä∫ API",                        "color": "F99B50", "description": "Plugin API, CLI, browser JS API" },
          { "name": "‚Ä∫ Auto-type",                  "color": "9141E0", "description": "Auto-type functionality in desktop apps" },
          { "name": "‚Ä∫ Browser",                    "color": "9141E0", "description": "Browser plugins and passing data to <=> from app" },
          { "name": "‚Ä∫ Customization",              "color": "E3F0FC", "description": "Customizations: plugins, themes, configs" },
          { "name": "‚Ä∫ Design",                     "color": "FA70DE", "description": "Design related queries" },
          { "name": "‚Ä∫ Dist",                       "color": "FA70DE", "description": "Installers and other forms of software distribution" },
          { "name": "‚Ä∫ Enterprise",                 "color": "11447a", "description": "Issues about collaboration, administration, and so on" },
          { "name": "‚Ä∫ Hardware",                   "color": "5a7503", "description": "YubiKey, other tokens, biometrics" },
          { "name": "‚Ä∫ Import/Export",              "color": "F5FFCC", "description": "Import from and export to different file formats" },
          { "name": "‚Ä∫ Improvement",                "color": "185c98", "description": "Enhance an existing feature" },
          { "name": "‚Ä∫ Performance",                "color": "006b75", "description": "Web and desktop performance issues" },
          { "name": "‚Ä∫ Plugin Request",             "color": "FCE9CA", "description": "Requested changes should be implemented as a plugin" },
          { "name": "‚Ä∫ Security",                   "color": "F75D39", "description": "Security issues" },
          { "name": "‚Ä∫ Self-Hosting",               "color": "fad8c7", "description": "Self-hosting installations and configs" },
          { "name": "‚Ä∫ Storage",                    "color": "5319e7", "description": "Storage providers: Dropbox, Google, WebDAV, etc." },
          { "name": "‚Ä∫ Updater",                    "color": "1BADDE", "description": "Auto-updater issues" },
          { "name": "‚Ä∫ UX",                         "color": "1BADDE", "description": "UX and usability" },
          { "name": "‚Ä∫ Website",                    "color": "fef2c0", "description": "Website related issues" },
          { "name": "‚ö† Urgent",                     "color": "a8740e", "description": "Requires urgent attention" },
          { "name": "‚ö† Announcement",               "color": "DB4712", "description": "Announcements" },
          { "name": "üì∞ Progress Report",           "color": "392297", "description": "Development updates" },
          { "name": "üì¶ Release",                   "color": "277542", "description": "Release announcements" },
          { "name": "‚úîÔ∏è Poll",                      "color": "972255", "description": "Community polls" },
          { "name": "‚ùî Question",                  "color": "FFFFFF", "description": "All questions" }
      ]

# #
#   jobs
# #

jobs:

    # #
    #   Job [ Verify / Create Labels ]
    #
    #   This job will ensure you have labels already created in your repo.
    #   All labels come from the JSON table LABELS_JSON.
    # #

    job-labels-create:
        name: >-
            üé´ Labels ‚Ä∫ Verify Existing
        runs-on: ubuntu-latest
      # runs-on: apollo-x64
        timeout-minutes: 5
        steps:

            # #
            #   Labels ‚Ä∫ Create ‚Ä∫ Checkout
            # #

            - name: '‚òëÔ∏è Checkout'
              uses: actions/checkout@v4
              with:
                  fetch-depth: 0

            # #
            #   Labels ‚Ä∫ Create ‚Ä∫ Job Information
            # #

            - name: >-
                  üîÑ Load Job
              uses: qoomon/actions--context@v4
              id: 'context'

            # #
            #   Labels ‚Ä∫ Create ‚Ä∫ Start
            # #

            - name: >-
                  ‚úÖ Start
              run: |
                  echo "‚Äé"
                  echo "‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï"
                  echo " Starting Job ${{ steps.context.outputs.job_name }}"
                  echo "‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï"

                  YEAR="$(date +'%Y')"
                  echo "YEAR=${YEAR}" >> $GITHUB_ENV

                  NOW="$(date +'%m-%d-%Y %H:%M:%S')"                                                #  02-25-2025 12:49:48
                  echo "NOW=${NOW}" >> $GITHUB_ENV

                  NOW_SHORT="$(date +'%m-%d-%Y')"                                                   #  02-25-2025
                  echo "NOW_SHORT=${NOW_SHORT}" >> $GITHUB_ENV

                  NOW_LONG="$(date +'%m-%d-%Y %H:%M')"                                              #  02-25-2025 12:49
                  echo "NOW_LONG=${NOW_LONG}" >> $GITHUB_ENV

                  NOW_DOCKER="$(date +'%Y%m%d')"                                                    #  20250225
                  echo "NOW_DOCKER=${NOW_DOCKER}" >> $GITHUB_ENV

                  NOW_DOCKER_TS="$(date -u +'%FT%T.%3NZ')"                                          #  2025-02-25T12:50:11.569Z
                  echo "NOW_DOCKER_TS=${NOW_DOCKER_TS}" >> $GITHUB_ENV

                  SHA1="$(git rev-parse HEAD)"                                                      #  71fad013cfce9116ec62779e4a7e627fe4c33627
                  echo "SHA1=${SHA1}" >> $GITHUB_ENV

                  SHA1_GH="$(echo ${GITHUB_SHA})"                                                   #  71fad013cfce9116ec62779e4a7e627fe4c33627
                  echo "SHA1_GH=${SHA1_GH}" >> $GITHUB_ENV

                  PKG_VER_1DIGIT="$(echo ${{ env.IMAGE_VERSION }} | cut -d '.' -f1-1)"              #  3.22 > 3
                  echo "PKG_VER_1DIGIT=${PKG_VER_1DIGIT}" >> $GITHUB_ENV

                  PKG_VER_2DIGIT="$(echo ${{ env.IMAGE_VERSION }} | cut -f2 -d ":" | cut -c1-3)"    #  3.22 > 3.2
                  echo "PKG_VER_2DIGIT=${PKG_VER_2DIGIT}" >> $GITHUB_ENV

                  echo "‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï"
                  echo "‚Äé"
                  echo "‚Äé"
                  sudo apt -qq update
                  sudo apt -qq install tree
                  echo "‚Äé"
                  echo "‚Äé"
                  echo "‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï"
                  echo "‚Äé"
                  echo "‚Äé"
                  echo " Runner .............. ${{ runner.name }}"
                  echo " Workflow ............ ${{ github.workflow }} (#${{ github.workflow_ref }})"
                  echo " Run Number .......... ${{ github.run_number }}"
                  echo " Ref ................. ${{ github.ref }}"
                  echo " Ref Name ............ ${{ github.ref_name }}"
                  echo " Event Name .......... ${{ github.event_name }}"
                  echo " Repo ................ ${{ github.repository }}"
                  echo " Repo Owner .......... ${{ github.repository_owner }}"
                  echo " Run ID .............. https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}"
                  echo " Triggered By ........ ${{ github.actor }}"
                  echo " SHA 1 (GITHUB_SHA) .. ${GITHUB_SHA}"
                  echo " SHA 2 (github.sha) .. ${{ github.sha }}"
                  echo " SHA 3 (env.SHA1) .... ${SHA1}"
                  echo " SHA 4 (env.SHA1_GH) . ${SHA1_GH}"
                  echo " Workspace ........... ${{ github.workspace }}"
                  echo " PWD ................. ${PWD}"
                  echo " Job Name ............ ${{ steps.context.outputs.job_name }}"
                  echo " Job ID .............. ${{ steps.context.outputs.job_id }}"
                  echo " Job URL ............. ${{ steps.context.outputs.job_url }}"
                  echo " Run ID .............. ${{ steps.context.outputs.run_id }}"
                  echo " Run Attempt ......... ${{ steps.context.outputs.run_attempt }}"
                  echo " Run Number .......... ${{ steps.context.outputs.run_number }}"
                  echo " Run URL ............. ${{ steps.context.outputs.run_url }}"
                  echo " Run Env ............. ${{ steps.context.outputs.environment }}"
                  echo " Run Env URL ......... ${{ steps.context.outputs.environment_url }}"
                  echo " Run Deployment ...... ${{ steps.context.outputs.deployment_id }}"
                  echo " Run Deployment URL .. ${{ steps.context.outputs.deployment_url }}"
                  echo " Run Deployment ...... ${{ steps.context.outputs.deployment_id }}"
                  echo " Run Runner Name ..... ${{ steps.context.outputs.runner_name }}"
                  echo " Run Runner ID ....... ${{ steps.context.outputs.runner_id }}"
                  echo " Year ................ ${YEAR}"
                  echo " Now ................. ${NOW}"
                  echo " Now (Short) ......... ${NOW_SHORT}"
                  echo " Now (Long) .......... ${NOW_LONG}"
                  echo " Now (Docker) ........ ${NOW_DOCKER}"
                  echo " Now (Docker TS) ..... ${NOW_DOCKER_TS}"
                  echo "‚Äé"
                  echo "‚Äé"
                  echo "‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï"
                  echo "‚Äé"
                  echo "‚Äé"
                  tree -I node_modules -I .git
                  echo "‚Äé"
                  echo "‚Äé"
                  echo "‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï"
                  echo "‚Äé"
                  echo "‚Äé"

            # #
            #   Issues (Stale) ‚Ä∫ Labels ‚Ä∫ Create ‚Ä∫ Verify Existing
            #
            #   check if repo has all of the needed issue / pr labels; create label if not exists
            #
            #   action needed if using 'pull_request' and 'issue_comment'
            #   to get the pull request, you would normally use ${{ github.event.number }}
            #   however this isnt available for 'issue_comment'
            # #

            - name: >-
                  üé´ Labels ‚Ä∫ Verify Existing
              uses: actions/github-script@v7
              with:
                  github-token: ${{ secrets.ADMINSERV_TOKEN_CL || github.token }}
                  script: |
                      const labels = JSON.parse( process.env.LABELS_JSON );
                      for ( const label of labels )
                      {
                          try
                          {
                              await github.rest.issues.createLabel(
                              {
                                  owner:        context.repo.owner,
                                  repo:         context.repo.repo,
                                  name:         label.name,
                                  description:  label.description || 'No Description',
                                  color:        label.color
                              });
                          }
                          catch ( err )
                          {
                              if ( err.status === 422 )
                              {
                                  console.log( `Label '${label.name}' already exists. Skipping.` );
                              }
                              else
                              {
                                  console.error( `Error creating label '${label.name}': ${err}` );
                              }
                          }
                      }

    # #
    #   Issues (Stale) ‚Ä∫ Labels ‚Ä∫ Assign Missing
    #
    #   Runs through all submissions to check for ones that have not been properly labeled
    #       - Bug
    #       - Feature
    #       - Urgent
    #       - Roadmap
    # #

    job-issues-nolabel:
        name: >-
            üé´ Labels ‚Ä∫ Assign Missing
        runs-on: ubuntu-latest
        timeout-minutes: 4
        needs: job-labels-create
        steps:

            # #
            #   Labels ‚Ä∫ Assign ‚Ä∫ Checkout
            # #

            - name: '‚òëÔ∏è Checkout'
              uses: actions/checkout@v4
              with:
                  fetch-depth: 0

            # #
            #   Labels ‚Ä∫ Assign ‚Ä∫ Job Information
            # #

            - name: >-
                  üîÑ Load Job
              uses: qoomon/actions--context@v4
              id: 'context'

            # #
            #   Labels ‚Ä∫ Assign ‚Ä∫ Start
            # #

            - name: >-
                  ‚úÖ Start
              run: |
                  echo "‚Äé"
                  echo "‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï"
                  echo " Starting Job ${{ steps.context.outputs.job_name }}"
                  echo "‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï"

                  YEAR="$(date +'%Y')"
                  echo "YEAR=${YEAR}" >> $GITHUB_ENV

                  NOW="$(date +'%m-%d-%Y %H:%M:%S')"                                                #  02-25-2025 12:49:48
                  echo "NOW=${NOW}" >> $GITHUB_ENV

                  NOW_SHORT="$(date +'%m-%d-%Y')"                                                   #  02-25-2025
                  echo "NOW_SHORT=${NOW_SHORT}" >> $GITHUB_ENV

                  NOW_LONG="$(date +'%m-%d-%Y %H:%M')"                                              #  02-25-2025 12:49
                  echo "NOW_LONG=${NOW_LONG}" >> $GITHUB_ENV

                  NOW_DOCKER="$(date +'%Y%m%d')"                                                    #  20250225
                  echo "NOW_DOCKER=${NOW_DOCKER}" >> $GITHUB_ENV

                  NOW_DOCKER_TS="$(date -u +'%FT%T.%3NZ')"                                          #  2025-02-25T12:50:11.569Z
                  echo "NOW_DOCKER_TS=${NOW_DOCKER_TS}" >> $GITHUB_ENV

                  SHA1="$(git rev-parse HEAD)"                                                      #  71fad013cfce9116ec62779e4a7e627fe4c33627
                  echo "SHA1=${SHA1}" >> $GITHUB_ENV

                  SHA1_GH="$(echo ${GITHUB_SHA})"                                                   #  71fad013cfce9116ec62779e4a7e627fe4c33627
                  echo "SHA1_GH=${SHA1_GH}" >> $GITHUB_ENV

                  PKG_VER_1DIGIT="$(echo ${{ env.IMAGE_VERSION }} | cut -d '.' -f1-1)"              #  3.22 > 3
                  echo "PKG_VER_1DIGIT=${PKG_VER_1DIGIT}" >> $GITHUB_ENV

                  PKG_VER_2DIGIT="$(echo ${{ env.IMAGE_VERSION }} | cut -f2 -d ":" | cut -c1-3)"    #  3.22 > 3.2
                  echo "PKG_VER_2DIGIT=${PKG_VER_2DIGIT}" >> $GITHUB_ENV

                  echo "‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï"
                  echo "‚Äé"
                  echo "‚Äé"
                  sudo apt -qq update
                  sudo apt -qq install tree
                  echo "‚Äé"
                  echo "‚Äé"
                  echo "‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï"
                  echo "‚Äé"
                  echo "‚Äé"
                  echo " Runner .............. ${{ runner.name }}"
                  echo " Workflow ............ ${{ github.workflow }} (#${{ github.workflow_ref }})"
                  echo " Run Number .......... ${{ github.run_number }}"
                  echo " Ref ................. ${{ github.ref }}"
                  echo " Ref Name ............ ${{ github.ref_name }}"
                  echo " Event Name .......... ${{ github.event_name }}"
                  echo " Repo ................ ${{ github.repository }}"
                  echo " Repo Owner .......... ${{ github.repository_owner }}"
                  echo " Run ID .............. https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}"
                  echo " Triggered By ........ ${{ github.actor }}"
                  echo " SHA 1 (GITHUB_SHA) .. ${GITHUB_SHA}"
                  echo " SHA 2 (github.sha) .. ${{ github.sha }}"
                  echo " SHA 3 (env.SHA1) .... ${SHA1}"
                  echo " SHA 4 (env.SHA1_GH) . ${SHA1_GH}"
                  echo " Workspace ........... ${{ github.workspace }}"
                  echo " PWD ................. ${PWD}"
                  echo " Job Name ............ ${{ steps.context.outputs.job_name }}"
                  echo " Job ID .............. ${{ steps.context.outputs.job_id }}"
                  echo " Job URL ............. ${{ steps.context.outputs.job_url }}"
                  echo " Run ID .............. ${{ steps.context.outputs.run_id }}"
                  echo " Run Attempt ......... ${{ steps.context.outputs.run_attempt }}"
                  echo " Run Number .......... ${{ steps.context.outputs.run_number }}"
                  echo " Run URL ............. ${{ steps.context.outputs.run_url }}"
                  echo " Run Env ............. ${{ steps.context.outputs.environment }}"
                  echo " Run Env URL ......... ${{ steps.context.outputs.environment_url }}"
                  echo " Run Deployment ...... ${{ steps.context.outputs.deployment_id }}"
                  echo " Run Deployment URL .. ${{ steps.context.outputs.deployment_url }}"
                  echo " Run Deployment ...... ${{ steps.context.outputs.deployment_id }}"
                  echo " Run Runner Name ..... ${{ steps.context.outputs.runner_name }}"
                  echo " Run Runner ID ....... ${{ steps.context.outputs.runner_id }}"
                  echo " Year ................ ${YEAR}"
                  echo " Now ................. ${NOW}"
                  echo " Now (Short) ......... ${NOW_SHORT}"
                  echo " Now (Long) .......... ${NOW_LONG}"
                  echo " Now (Docker) ........ ${NOW_DOCKER}"
                  echo " Now (Docker TS) ..... ${NOW_DOCKER_TS}"
                  echo "‚Äé"
                  echo "‚Äé"
                  echo "‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï"
                  echo "‚Äé"
                  echo "‚Äé"
                  tree -I node_modules -I .git
                  echo "‚Äé"
                  echo "‚Äé"
                  echo "‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï"
                  echo "‚Äé"
                  echo "‚Äé"

            # #
            #   Labels ‚Ä∫ Assign ‚Ä∫ Check
            #
            #   Check if repo has labels to use
            # #

            - name: >-
                  üé´ Labels ‚Ä∫ Check
              uses: actions/github-script@v7
              with:
                  github-token: ${{ secrets.ADMINSERV_TOKEN_CL || github.token }}
                  script: |

                    /*
                        Date/Time
                    */

                    const dateTimeformat = ( date ) =>
                    {
                        let month               = date.getMonth( ) + 1;
                        month                   = month.toString( ).padStart( 2, '0' );
                        let day                 = date.getDate( ).toString( ).padStart( 2, '0' );
                        let year                = date.getFullYear( ).toString( ).padStart( 2, '0' );

                        let hours               = date.getHours();
                        let minutes             = date.getMinutes();
                        let x                   = hours >= 12 ? 'PM' : 'AM';
                        hours                   = hours % 12;
                        hours                   = hours ? hours : 12;
                        minutes                 = minutes.toString( ).padStart( 2, '0' );
                        let mergeTime           = month + '.' + day + '.' + year + ' ' + hours + ':' + minutes + ' ' + x;

                        return mergeTime;
                    }

                    /*
                        Change last number ( 36 = hours )
                    */

                    const expireAfterMs         = 1000 * 60 * 60 * 36;        // milliseconds ( 36 hours )
                    const curtime               = new Date( ).getTime( );     // 1711471510629
                    const issues                = await github.rest.issues.listForRepo( { owner: context.repo.owner, repo: context.repo.repo, state: 'open' } );

                    console.log( `  üì¶‚îÄ‚îÄ  Found ${issues.data.length} open issues` );

                    for ( const issue of issues.data )
                    {

                        const author            = `${ issue.user.login }`;
                        let date_UpdateDate     = new Date( `${ issue.updated_at }` ?? `${ issue.created_at }` );   // Tue Mar 26 2024 16:40:41 GMT+0000 (Coordinated Universal Time)
                        date_UpdateDate.toISOString( )                                                              // Tue Mar 26 2024 16:40:41 GMT+0000 (Coordinated Universal Time) (string)

                        let date_UpdateHuman    = dateTimeformat( date_UpdateDate ) + " UTC";                       // 03.26.2024 4:40 PM UTC
                        const time_UpdateMs     = new Date( issue.updated_at ).getTime( );                          // 1711471241000

                        // if ( curtime < time_UpdateMs + expireAfterMs ) continue;

                        /*
                            Anything past this point is stale / to be closed
                        */

                        const timeline          = await github.rest.issues.listEventsForTimeline( { owner: context.repo.owner, repo: context.repo.repo, issue_number: issue.number } );
                        // const labelEvent     = timeline.data.find( event => event.event === 'labeled' && event.label.name === 'status-stale' );

                        /*
                            Get Issue Data
                        */

                        const add_labels        = issue.labels.map( label => label.name );

                        let iss_title           = `${ issue.title }`;
                        const iss_title_lc      = iss_title.toLowerCase( );

                        let iss_body            = `${ issue.body }`;
                        const iss_body_lc       = iss_body.toLowerCase( );

                        console.log( `      ‚îî‚îÄ‚îÄ üìÅ ` + iss_title + ` #${ issue.number }`);
                        console.log( `         ‚îî‚îÄ‚îÄ üìÑ last updated on ${ date_UpdateHuman }` );
                        console.log( `         ‚îî‚îÄ‚îÄ üìÑ ${add_labels}` );
                        console.log( `\n\n` )

                        /*
                            Keywords
                        */

                        const bug_words           = [ "bug", "broke", "issue", "fail", "wont work" ];
                        const feat_words          = [ "feature", "request", "add", "addition", "enhance", "create" ];
                        const urgn_words          = [ "urgent", "urgency", "emergency", "important", "critical" ];
                        const road_words          = [ "roadmap", "road map", "planned" ];

                        /*
                            Tags
                        */

                        const bug_tag             = `${{ env.PREFIX_BUG }}:`;
                        const bug_lbl             = `${{ env.LABEL_BUG }}`;
                        const feat_tag            = `${{ env.PREFIX_FEATURE }}:`;
                        const feat_lbl            = `${{ env.LABEL_FEATURE }}`;
                        const urgn_tag            = `${{ env.PREFIX_URGENT }}:`;
                        const urgn_lbl            = `${{ env.LABEL_URGENT }}`;
                        const road_tag            = `${{ env.PREFIX_ROADMAP }}:`;
                        const road_lbl            = `${{ env.LABEL_ROADMAP }}`;

                        /*
                            Label > Bugs

                            Find regex based phrases

                            Regex:
                                https://regex101.com/r/Z99Gnq/2
                        */

                        const bug_bIncWordT             = bug_words.some( s => s.includes( iss_title_lc ) || iss_title_lc.includes( s ) );
                        const bug_findWordList 	        = /^\b(?:I?\s*have\s*(?:a|an)\s*(?:issue|problem|bug))|(?:will\s*not\s*work)|(?:it\s*is\s*(?:broken|broke|stuck))|(?:found\s*(?:an?|the)\s*(?:bug|issue))|(?:can\s*I\s*fix\s*the\s*(?:bug|issue))|(?:(?:does not|doesn'?t|don'?t|won'?t|can'?t|can\s?not|will\s*not)\s*(?:work|load|function))|(?:it\s*(?:will\s?not|won'?t|can\s?not|can'?t))\s*(?:get|find)\s*the\s*(?:website|site|webpage|page)|(?:the\s*(?:window|frame)\s*is\s*(?:blank|white|empty|missing))\b$/igm;
                        const bug_bFoundMatchTitle      = Boolean( bug_findWordList.test( iss_title ) );
                        const bug_bFoundMatchBody       = Boolean( bug_findWordList.test( iss_body ) );

                        /*
                            Do not change a title if the item starts with a PR: #

                            Regex:
                                https://regex101.com/r/JOrqbN/1
                        */

                        const bug_findPRTitle           = /^PR\s?#?(?:[0-9]*:)/igm;
                        const bug_bFoundPRTitle         = Boolean( bug_findPRTitle.test( iss_title ) );

                        /*
                            - Check if issue title matches the issue label "Bug:"
                            - Check if title contains word in containsList
                        */

                        if ( iss_title_lc.startsWith( bug_tag.toLowerCase( ) ) || bug_bIncWordT || bug_bFoundMatchTitle || bug_bFoundMatchBody )
                        {

                            add_labels.push( `${ bug_lbl }` );

                            if ( author === `${{ env.BOT_NAME_DEPENDABOT }}` )
                                core.info( `Skipping: Detected ${ author }` )

                            if ( author === `${{ env.BOT_NAME_RENOVATE }}` )
                                core.info( `Skipping: Detected ${ author }` )

                            /*
                                Rename title to contain Bug:
                                if bug title or body contains keyword hinting at the issue being about a bug; change the title of the issue

                                @ref            https://jsfiddle.net/aetherinox/wj17x8mp/2/
                            */

                            if ( author !== `${{ env.BOT_NAME_DEPENDABOT }}` && !bug_bFoundPRTitle && !iss_title_lc.startsWith( bug_tag.toLowerCase( ) ) && !iss_title_lc.startsWith( feat_tag.toLowerCase( ) ) && !iss_title_lc.startsWith( urgn_tag.toLowerCase( ) ) && !iss_title_lc.startsWith( road_tag.toLowerCase( ) ) )
                            {

                                /*
                                    If a user creates an issue starting with our tag; strip it and add ours with the emoji instead
                                        original:       Bug: CMD windows opens then closes, can't run the script.
                                        new:            üêõ Bug: CMD windows opens then closes, can't run the script.
                                */

                                const removeBeginning1 		  = bug_tag.substring(3); 				        // "Bug:"
                                let removeBeginning2 		    = bug_tag.substring(0);				          // "üêõ Bug:"
                                removeBeginning2			      = removeBeginning2.replace(/\s/g, '')	  // "Bug:"

                                if ( iss_title.startsWith(removeBeginning1) )
                                {
                                    iss_title = iss_title.slice(removeBeginning1.length);
                                    iss_title = iss_title.trim();
                                }
                                else if ( iss_title.startsWith(removeBeginning2) )
                                {
                                    iss_title = iss_title.slice(removeBeginning2.length);
                                    iss_title = iss_title.trim();
                                }

                                const title             = iss_title;
                                let title_new           = title.replace( /^\s?bug\s*(.*?)\b/gi, '' );
                                title_new               = title.replace( /^\s?fail\s*(.*?)\b/gi, '' );
                                title_new               = title.replace( /^\s?issue\s*(.*?)\b/gi, '' );
                                iss_title               = `${ bug_tag } ${ title_new }`;
                            }

                            console.log( `New Title: ...................... ${ iss_title }` )

                            await github.rest.issues.update(
                            {
                                owner: context.repo.owner, repo: context.repo.repo, issue_number: issue.number,
                                title: `${ iss_title }`, labels: add_labels
                            } );
                        }

                        /*
                            Label > Features
                        */

                        const feat_bIncWordT            = feat_words.some( s => s.includes( iss_title_lc ) || iss_title_lc.includes( s ) );

                        /*
                            Find regex based phrases

                            Regex:
                                https://regex101.com/r/fR1Hm6/1
                        */

                        const feat_findWordList 	      = /(?:(?:add|enjoy|would|like|can|request|include|see|could|have)\s*?(?:the|liked?|i|we|an?|the|you?)\s*?(?:to|have|an|get|ability|request|add|feature|functionality|addon|addition|plugin|create))|(?:(?:add|see|get)\s*?support\s*?(?:for|with|of))|(?:can\s*we\s*get\s*?(?:the|a)\s*?(?:ability|feature))|(?:üí° Feature:)$/igm;
                        const feat_bFoundMatchTitle     = Boolean( feat_findWordList.test( iss_title ) );
                        const feat_bFoundMatchBody      = Boolean( feat_findWordList.test( iss_body ) );

                        /*
                            Do not change a title if the item starts with a PR: #

                            Regex:
                                https://regex101.com/r/JOrqbN/1
                        */

                        const feat_findPRTitle          = /^PR\s?#?(?:[0-9]*:)/igm;
                        const feat_bFoundPRTitle        = Boolean( feat_findPRTitle.test( iss_title ) );

                        /*
                            - Check if issue title matches the issue label "Feature:"
                            - Check if title contains word in containsList
                        */

                        if ( iss_title_lc.startsWith( feat_tag.toLowerCase( ) ) || feat_bIncWordT || feat_bFoundMatchTitle || feat_bFoundMatchBody )
                        {

                            add_labels.push( `${ feat_lbl }` );

                            if ( author === `${{ env.BOT_NAME_DEPENDABOT }}` )
                                core.info( `Skipping: Detected ${ author }` )

                            if ( author === `${{ env.BOT_NAME_RENOVATE }}` )
                                core.info( `Skipping: Detected ${ author }` )

                            /*
                                Rename title to contain Feature:
                                if feature title or body contains keyword hinting at the issue being about a feature; change the title of the issue

                                @ref            https://jsfiddle.net/aetherinox/wj17x8mp/2/
                            */
                            if ( author !== `${{ env.BOT_NAME_DEPENDABOT }}` && !feat_bFoundPRTitle && !iss_title_lc.startsWith( bug_tag.toLowerCase( ) ) && !iss_title_lc.startsWith( feat_tag.toLowerCase( ) ) && !iss_title_lc.startsWith( urgn_tag.toLowerCase( ) ) && !iss_title_lc.startsWith( road_tag.toLowerCase( ) ) )
                            {

                                /*
                                    If a user creates an issue starting with our tag; strip it and add ours with the emoji instead
                                        original:       Feature: CMD windows opens then closes, can't run the script.
                                        new:            üí° Feature: CMD windows opens then closes, can't run the script.
                                */

                                const removeBeginning1 		  = feat_tag.substring(3); 				          // "Feature:"
                                let removeBeginning2 		    = feat_tag.substring(0);				          // "üí° Feature:"
                                removeBeginning2			      = removeBeginning2.replace(/\s/g, '')	    // "Feature:"

                                if ( iss_title.startsWith(removeBeginning1) )
                                {
                                    iss_title = iss_title.slice(removeBeginning1.length);
                                    iss_title = iss_title.trim();
                                }
                                else if ( iss_title.startsWith(removeBeginning2) )
                                {
                                    iss_title = iss_title.slice(removeBeginning2.length);
                                    iss_title = iss_title.trim();
                                }

                                const title             = iss_title;
                                let title_new           = title.replace( /^\s?feature\s*(.*?)\b/gi, '' );
                                title_new               = title.replace( /^\s?request\s*(.*?)\b/gi, '' );
                                title_new               = title.replace( /^\s?add(.*?)\s?feature\s*(.*?)\b/gi, '' );
                                title_new               = title.replace( /^\s?add(.*?)\s?support\s*(.*?)\b/gi, '' );
                                iss_title               = `${ feat_tag } ${ title_new }`; // change TAG per category
                            }

                            console.log( `New Title: ...................... ${ iss_title }` )

                            await github.rest.issues.update(
                            {
                                owner: context.repo.owner, repo: context.repo.repo, issue_number: issue.number,
                                title: `${ iss_title }`, labels: add_labels
                            } );
                        }

                        /*
                            Label > Urgent
                        */

                        const urgn_bIncWordT            = urgn_words.some( s => s.includes( iss_title_lc ) || iss_title_lc.includes( s ) );

                        /*
                            Find regex based phrases

                            Regex:
                                https://regex101.com/r/eE9tJX/2
                        */

                        const urgn_findWordList         = /(?:(?:this)?is\s*a?n?\s*?(?:emergency|urgent|important|vital|acute|crucial|grave|pressing|serious|top.?priority|high.?priority))|(?:reply|respond|answer|write|address)\s*(?:immediate|quick|asap|urgent|now|fast|(?:as)?\s*(?:soon|quick|immediate|fast))(?:ly)?|(?:need\s*(?:help|support|fixed|answer|reply|response)!)|(?:emergency|critical|urgen(?:t|cy)|high.?priority)/igm;
                        const urgn_bFoundMatchTitle     = Boolean( urgn_findWordList.test( iss_title ) );
                        const urgn_bFoundMatchBody      = Boolean( urgn_findWordList.test( iss_body ) );

                        /*
                            Do not change a title if the item starts with a PR: #

                            Regex:
                                https://regex101.com/r/JOrqbN/1
                        */

                        const urgn_findPRTitle          = /^PR\s?#?(?:[0-9]*:)/igm;
                        const urgn_bFoundPRTitle        = Boolean( urgn_findPRTitle.test( iss_title ) );

                        /*
                            - Check if issue title matches the issue label "Urgent:"
                            - Check if title contains word in containsList
                        */

                        if ( iss_title_lc.startsWith( urgn_tag.toLowerCase( ) ) || urgn_bIncWordT || urgn_bFoundMatchTitle || urgn_bFoundMatchBody )
                        {

                            add_labels.push( `${ urgn_lbl }` );

                            if ( author === `${{ env.BOT_NAME_DEPENDABOT }}` )
                                core.info( `Skipping: Detected ${ author }` )

                            if ( author === `${{ env.BOT_NAME_RENOVATE }}` )
                                core.info( `Skipping: Detected ${ author }` )

                            /*
                                Rename title to contain Urgent:
                                if urgent title or body contains keyword hinting at the issue being about urgent; change the title of the issue

                                @ref            https://jsfiddle.net/aetherinox/wj17x8mp/2/
                            */
                            if ( author !== `${{ env.BOT_NAME_DEPENDABOT }}` && !urgn_bFoundPRTitle && !iss_title_lc.startsWith( bug_tag.toLowerCase( ) ) && !iss_title_lc.startsWith( feat_tag.toLowerCase( ) ) && !iss_title_lc.startsWith( urgn_tag.toLowerCase( ) ) && !iss_title_lc.startsWith( road_tag.toLowerCase( ) ) )
                            {

                                /*
                                    If a user creates an issue starting with our tag; strip it and add ours with the emoji instead
                                        original:       Urgent: CMD windows opens then closes, can't run the script.
                                        new:            ‚ö† Urgent: CMD windows opens then closes, can't run the script.
                                */

                                const removeBeginning1 		  = urgn_tag.substring(3); 				          // "Urgent:"
                                let removeBeginning2 		    = urgn_tag.substring(0);				          // "‚ö† Urgent:"
                                removeBeginning2			      = removeBeginning2.replace(/\s/g, '')	    // "Urgent:"

                                if ( iss_title.startsWith(removeBeginning1) )
                                {
                                    iss_title = iss_title.slice(removeBeginning1.length);
                                    iss_title = iss_title.trim();
                                }
                                else if ( iss_title.startsWith(removeBeginning2) )
                                {
                                    iss_title = iss_title.slice(removeBeginning2.length);
                                    iss_title = iss_title.trim();
                                }

                                const title             = iss_title;
                                let title_new           = title.replace( /^\s?emergency\s*(.*?)\b/gi, '' );
                                title_new               = title.replace( /^\s?urgent\s*(.*?)\b/gi, '' );
                                title_new               = title.replace( /^\s?urgency\s*(.*?)\b/gi, '' );
                                title_new               = title.replace( /^\s?important\s*(.*?)\b/gi, '' );
                                title_new               = title.replace( /^\s?critical\s*(.*?)\b/gi, '' );
                                iss_title               = `${ urgn_tag } ${ title_new }`;
                            }

                            console.log( `New Title: ...................... ${ iss_title }` )

                            await github.rest.issues.update(
                            {
                                owner: context.repo.owner, repo: context.repo.repo, issue_number: issue.number,
                                title: `${ iss_title }`, labels: add_labels
                            } );
                        }

                        /*
                            Label > Roadmap
                        */

                        const road_bIncWordT      = road_words.some( s => s.includes( iss_title_lc ) || iss_title_lc.includes( s ) );

                        /*
                            Find regex based phrases
                            Roadmap requires headers #Summary and #Proposal | #Objective

                            Regex:
                                https://regex101.com/r/ucajBZ/1
                        */

                        const road_findWordList 	        = /#\s*Summary[\S\s]+#\s*(?:Proposal|Objective)[^\]]+/igm;
                        const road_bFoundMatchTitle         = Boolean( road_findWordList.test( iss_title ) );
                        const road_bFoundMatchBody          = Boolean( road_findWordList.test( iss_body ) );

                        /*
                            Do not change a title if the item starts with a PR: #

                            Regex:
                                https://regex101.com/r/JOrqbN/1
                        */

                        const road_findPRTitle              = /^PR\s?#?(?:[0-9]*:)/igm;
                        const road_bFoundPRTitle            = Boolean( road_findPRTitle.test( iss_title ) );

                        /*
                            - Check if issue title matches the issue label "Roadmap:"
                            - Check if title contains word in containsList
                        */

                        if ( iss_title_lc.startsWith( road_tag.toLowerCase( ) ) || road_bIncWordT || road_bFoundMatchTitle || road_bFoundMatchBody )
                        {

                            add_labels.push( `${ road_lbl }` );

                            if ( author === `${{ env.BOT_NAME_DEPENDABOT }}` )
                                core.info( `Skipping: Detected ${ author }` )

                            if ( author === `${{ env.BOT_NAME_RENOVATE }}` )
                                core.info( `Skipping: Detected ${ author }` )

                            /*
                                Rename title to contain Roadmap:
                                if roadmap title or body contains keyword hinting at the issue being about roadmap; change the title of the issue

                                @ref            https://jsfiddle.net/aetherinox/wj17x8mp/2/
                            */
                            if ( author !== `${{ env.BOT_NAME_DEPENDABOT }}` && !road_bFoundPRTitle && !iss_title_lc.startsWith( bug_tag.toLowerCase( ) ) && !iss_title_lc.startsWith( feat_tag.toLowerCase( ) ) && !iss_title_lc.startsWith( urgn_tag.toLowerCase( ) ) && !iss_title_lc.startsWith( road_tag.toLowerCase( ) ) )
                            {

                                /*
                                    If a user creates an issue starting with our tag; strip it and add ours with the emoji instead
                                        original:       Roadmap: CMD windows opens then closes, can't run the script.
                                        new:            üó∫Ô∏è Roadmap: CMD windows opens then closes, can't run the script.
                                */

                                const removeBeginning1 		  = road_tag.substring(3); 				          // "Roadmap:"
                                let removeBeginning2 		    = road_tag.substring(0);				          // "üó∫Ô∏è Roadmap:"
                                removeBeginning2			      = removeBeginning2.replace(/\s/g, '')	    // "Roadmap:"

                                if ( iss_title.startsWith(removeBeginning1) )
                                {
                                    iss_title = iss_title.slice(removeBeginning1.length);
                                    iss_title = iss_title.trim();
                                }
                                else if ( iss_title.startsWith(removeBeginning2) )
                                {
                                    iss_title = iss_title.slice(removeBeginning2.length);
                                    iss_title = iss_title.trim();
                                }

                                const title             = iss_title;
                                let title_new           = title.replace( /^\s?broad(.*?)\s?map\s*(.*?)\b/gi, '' );
                                title_new               = title.replace( /^\s?planned\s*(.*?)\b/gi, '' );
                                title_new               = title.replace( /^\s?broadmap\s*(.*?)\b/gi, '' );
                                iss_title               = `${ road_tag } ${ title_new }`; // change TAG per category
                            }

                            console.log( `New Title: ...................... ${ iss_title }` )

                            await github.rest.issues.update(
                            {
                                owner: context.repo.owner, repo: context.repo.repo, issue_number: issue.number,
                                title: `${ iss_title }`, labels: add_labels
                            } );
                        }

                        /*
                        await github.rest.issues.update(
                        {
                            owner: context.repo.owner, repo: context.repo.repo, issue_number: issue.number,
                            state: 'closed', state_reason: 'not planned'
                        } );
                        */
                    }

    # #
    #   Issues (Stale) ‚Ä∫ Stale
    # #

    job-issues-stale:
        name: >-
            üí§ Scan ‚Ä∫ Check Stale
        runs-on: ubuntu-latest
      # runs-on: apollo-x64
        timeout-minutes: 5
        needs:
            - job-labels-create
            - job-issues-nolabel
        permissions:
            contents: write
            issues: write
            pull-requests: write
        steps:

            # #
            #   Labels ‚Ä∫ Stale ‚Ä∫ Check
            # #

            - name: >-
                  üí§ Stale ‚Ä∫ Check Condition
              uses: actions/stale@v9
              with:
                  repo-token: ${{ secrets.ADMINSERV_TOKEN_CL || github.token }}
                  stale-issue-message: |
                      ‚ö†Ô∏è It looks like there hasn't been any recent updates on this issue.  If you created this issue and no longer consider it open, then please login to github and close the issue.

                      If there is no further activity on this issue, it will be automatically closed in the next week.

                      ---

                      <sub>I am a bot reaching out to you with an automated response.</sub>
                  stale-issue-label: '${{ env.LABEL_STALE }}'
                  close-issue-label: '${{ env.LABEL_AUTOCLOSE }}'
                  exempt-issue-labels: '${{ env.LABEL_ACCEPTED }},${{ env.LABEL_REVIEW }},${{ env.LABEL_PENDING }},${{ env.LABEL_BUG }},${{ env.LABEL_DEPENDENCY }},${{ env.LABEL_DOCS }},${{ env.LABEL_FEATURE }},${{ env.LABEL_GIT }},${{ env.LABEL_PR }},${{ env.LABEL_ROADMAP }}'
                  days-before-stale: 120
                  days-before-close: 7
                  days-before-pr-stale: -1
                  days-before-pr-close: -1

    # #
    #   Issues (Stale) ‚Ä∫ Lock
    # #

    job-issues-lock:
        name: >-
            üîí Scan ‚Ä∫ Lock Inactive
        runs-on: ubuntu-latest
      # runs-on: apollo-x64
        timeout-minutes: 5
        needs:
            - job-labels-create
            - job-issues-nolabel
        steps:

            # #
            #   Labels ‚Ä∫ Inactive ‚Ä∫ Lock
            # #

            - name: >-
                  üîí Inactive ‚Ä∫ Lock
              uses: dessant/lock-threads@v5
              with:
                  github-token: ${{ secrets.ADMINSERV_TOKEN_CL || github.token }}
                  exclude-any-issue-labels: '${{ env.LABEL_AC_REVIEW }},${{ env.LABEL_ACCEPTED }},${{ env.LABEL_REVIEW }},${{ env.LABEL_PENDING }},${{ env.LABEL_BUG }},${{ env.LABEL_DEPENDENCY }},${{ env.LABEL_DOCS }},${{ env.LABEL_FEATURE }},${{ env.LABEL_GIT }},${{ env.LABEL_ROADMAP }},${{ env.LABEL_INTERNAL }}'
                  add-issue-labels: '${{ env.LABEL_LOCKED }}'
                  issue-inactive-days: '120'
                  issue-lock-reason: 'resolved'
                  issue-comment: >
                      ‚ö†Ô∏è This **issue** has been automatically locked since there has not been any recent activity after it was closed.

                      Please open a new issue for related bugs.

                      ---

                      <sub>I am a bot reaching out to you with an automated response.</sub>
                  exclude-any-pr-labels: '${{ env.LABEL_AC_REVIEW }},${{ env.LABEL_ACCEPTED }},${{ env.LABEL_REVIEW }},${{ env.LABEL_PENDING }},${{ env.LABEL_BUG }},${{ env.LABEL_DEPENDENCY }},${{ env.LABEL_DOCS }},${{ env.LABEL_FEATURE }},${{ env.LABEL_GIT }},${{ env.LABEL_ROADMAP }},${{ env.LABEL_INTERNAL }}'
                  add-pr-labels: '${{ env.LABEL_LOCKED }}'
                  pr-inactive-days: '365'
                  pr-lock-reason: 'resolved'
                  pr-comment: >
                      ‚ö†Ô∏è This **pull request** has been automatically locked since there has not been any recent activity after it was closed.

                      Please open a new issue for related bugs.

                      ---

                      <sub>I am a bot reaching out to you with an automated response.</sub>

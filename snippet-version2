```dataviewjs

const page_sub        = "" // Edit if wanting to bypass to a certain subpage

// ------------------------------------
// No need to edit below this section
// ------------------------------------

const path_base       = dv.current().file.path
const path            = path_base.substr(0, path_base.lastIndexOf(".md"));

const filter_page     = '"' + path + "" + page_sub + '"';
const filter_folder   = path + page_sub;

console.log(filter_folder)

let p = dv.pages(filter_page)
    // .where(p => p.file.name != dv.current().file.name) // Filter out the current page
    //.where(p => p.file.folder == filter_folder) // Filter out folders
    .sort(p => p.file.path)
    .forEach(p =>
    {
        //dv.header(4, p.file.name); // display page name as header

        const cache = this.app.metadataCache.getCache(p.file.path); //get metadata cache for the page

        if (cache)
        {
            const headings = cache.headings; // get headings from cache

            if (headings)
            {
                const houtput = headings.slice(0) // exclude the first heading
                    .filter(h => h.level <= 6) // filter headings based on level
                    .map(h =>
                    {
                        // Determine indentation based on heading level
                        let indent = " ".repeat(h.level);
                        
                        const file_name = p.file.name;
                        const file_heading = h.heading
                        
                        // remove backticks
                        const file_head = file_heading.replace(/`/g, '');
                        
                        let objLink = "[[" + file_name + "#" + h.heading + "|" + file_head + "]]";

                        if ( h.level == 1 )
                            return indent + "- <sub>" + objLink + "</sub>";
                        else if ( h.level == 2 )
                            return indent + " - <sub>" + objLink + "</sub>";
                        else if ( h.level == 3 )
                            return indent + "  - <sub>" + objLink + "</sub>";
                        else if ( h.level == 4 )
                            return indent + "   - <sub>" + objLink + "</sub>";
                        else if ( h.level == 5 )
                            return indent + "    - <sub>" + objLink + "</sub>";
                        else if ( h.level == 6 )
                            return indent + "     - <sub>" + objLink + "</sub>";
                        else
                            return indent + "- " + objLink;
                    })
                    .join("\n") // Join the formatted headings with newlines
                    
                dv.el("div", houtput); // Display the formatted headings as a div
                dv.el("div", "<br />"); // insert line-break between sections
            }
        }
    });
```
